package datasource

import (
	gotemplate "text/template"

	template "github.com/GuanceCloud/iacker/pkg/template/v1"
	naming "github.com/GuanceCloud/iacker/pkg/helpers/naming"
)

_data_source_list_template: """
// Code generated by Guance Cloud Code Generation Pipeline. DO NOT EDIT.

package \(provider)

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"

	{{- range $_, $name := . }}
	"github.com/GuanceCloud/terraform-provider-\(provider)/internal/datasources/{{ .lower }}"
	{{- end }}
)

// DataSources defines the data sources implemented in the provider.
func (p *guanceProvider) DataSources(_ context.Context) []func() datasource.DataSource {
	return []func() datasource.DataSource{
		{{- range $_, $name := . }}
		{{ .lower }}.New{{ .uppercamel }}DataSource,
		{{- end }}
	}
}
"""

outputs: files: "\(provider)/data_sources.go": template.#File & {
	content: gotemplate.Execute(_data_source_list_template, {
		for rsname, rsinfo in inputs.resources {
			if (*rsinfo.meta.datasource | false) {
				(rsname): naming.#Snake & {"name": rsinfo.plural}
			}
		}
	})
}
